{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-21T16:26:17.610Z",
    "end": "2021-05-21T16:26:31.060Z",
    "duration": 13450,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "95780ab9-4776-4eb9-bdb0-1295646026b1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1003,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "__awaiter(void 0, void 0, void 0, function* () {\n    yield (yield exports.BrowserInstance.getDriver()).close();\n    // any action after all tests run.\n})",
          "err": {},
          "uuid": "59966b24-5a55-446b-8c84-8d314fe94cd4",
          "parentUUID": "95780ab9-4776-4eb9-bdb0-1295646026b1",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 54,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var _a;\nreturn __awaiter(this, void 0, void 0, function* () {\n    if (((_a = this.currentTest) === null || _a === void 0 ? void 0 : _a.state) === 'failed') {\n        yield mkdirp(reportDir);\n        let screenshotFile = reportDir + Date.now() + '.png';\n        addContext(this, 'file:///' + screenshotFile);\n        return exports.BrowserInstance.saveScreenshot(screenshotFile)\n            .then(() => {\n            // any action if test fails.\n        });\n    }\n    return;\n});",
          "err": {},
          "uuid": "22d9a30a-a3ab-46cd-8895-248ed83001e8",
          "parentUUID": "95780ab9-4776-4eb9-bdb0-1295646026b1",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "dd66d0d7-8cb3-4ac3-845b-cc0ac2ea5293",
          "title": "Google page test that pass",
          "fullFile": "D:\\RnD\\testFrameworks\\WebDriverJS-Boilerplate\\dist\\tests\\sample.test.js",
          "file": "\\dist\\tests\\sample.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Google page test that pass\"",
              "fullTitle": "Google page test that pass \"before all\" hook in \"Google page test that pass\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        debugger;\n        goolePage = new pages_1.GooglePage(mocha_base_1.BrowserInstance);\n    })",
              "err": {},
              "uuid": "386ba177-f5de-4f7f-8236-1fbbe0e30bab",
              "parentUUID": "dd66d0d7-8cb3-4ac3-845b-cc0ac2ea5293",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify elements on googel.com page",
              "fullTitle": "Google page test that pass Verify elements on googel.com page",
              "timedOut": false,
              "duration": 9029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        debugger;\n        yield goolePage.navigate();\n        const searchButtonValue = yield goolePage.searchButton.getValue();\n        chai_1.assert(searchButtonValue === \"Google Search\", \"'Google Search' button not found.\");\n        const feelingLuckyButtonValue = yield goolePage.feelingLuckyButton.getValue();\n        chai_1.assert(feelingLuckyButtonValue === \"I'm Feeling Lucky\", \"'Feeling Lucky' button not found.\");\n    })",
              "err": {},
              "uuid": "bb5cb39e-8c2b-4e3c-b409-442e47cab133",
              "parentUUID": "dd66d0d7-8cb3-4ac3-845b-cc0ac2ea5293",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Google a string and verfiy on results page",
              "fullTitle": "Google page test that pass Google a string and verfiy on results page",
              "timedOut": false,
              "duration": 2828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        yield goolePage.navigate();\n        yield goolePage.searchTextBox.enterText('my search criteria' + selenium_webdriver_1.Key.ENTER);\n        yield lib_1.delay(2000);\n        yield Promise.all([\n            ensure_1.ensure(goolePage.resultStats).isVisible()\n        ]);\n        // Verify a string on google results page.\n        const resultStats = yield goolePage.resultStats.getText();\n        chai_1.assert(resultStats.startsWith(\"About\"), \"Results page not found\");\n    })",
              "err": {},
              "uuid": "e548812c-ba5b-4f07-a812-3104ba511ddd",
              "parentUUID": "dd66d0d7-8cb3-4ac3-845b-cc0ac2ea5293",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb5cb39e-8c2b-4e3c-b409-442e47cab133",
            "e548812c-ba5b-4f07-a812-3104ba511ddd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "ed52b43f-9e85-4cb8-9d16-893cd540ac68",
          "title": "Google page test that fails",
          "fullFile": "D:\\RnD\\testFrameworks\\WebDriverJS-Boilerplate\\dist\\tests\\samplefail.test.js",
          "file": "\\dist\\tests\\samplefail.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Google page test that fails\"",
              "fullTitle": "Google page test that fails \"before all\" hook in \"Google page test that fails\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        goolePage = new pages_1.GooglePage(mocha_base_1.BrowserInstance);\n    })",
              "err": {},
              "uuid": "d7a5a750-00a5-437d-8b5f-ace20ed738ee",
              "parentUUID": "ed52b43f-9e85-4cb8-9d16-893cd540ac68",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visit Azure Partner Portal",
              "fullTitle": "Google page test that fails Visit Azure Partner Portal",
              "timedOut": false,
              "duration": 516,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"file:///D:\\\\RnD\\\\testFrameworks\\\\WebDriverJS-Boilerplate\\\\dist\\\\mochawesome-report\\\\1621614390005.png\"",
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        yield goolePage.navigate();\n        const searchButtonValue = yield goolePage.searchButton.getValue();\n        // This assert will fail as Google search page wont' have \"Yahoo Search\" button.\n        chai_1.assert(searchButtonValue === \"Yahoo Search\", \"'Google Search' button not found.\");\n        // Below lines to do accessibility test. Commmented now as google page is failing the test.\n        // const results = await page.accessibilityCheck();\n        // assert.equal(results.violations.length, 0);\n    })",
              "err": {
                "message": "AssertionError: 'Google Search' button not found.",
                "estack": "AssertionError: 'Google Search' button not found.\n    at D:\\RnD\\testFrameworks\\WebDriverJS-Boilerplate\\dist\\tests\\samplefail.test.js:24:16\n    at Generator.next (<anonymous>)\n    at fulfilled (dist\\tests\\samplefail.test.js:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                "diff": null
              },
              "uuid": "0c92c4f1-f7fc-495b-8590-c40f60485532",
              "parentUUID": "ed52b43f-9e85-4cb8-9d16-893cd540ac68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0c92c4f1-f7fc-495b-8590-c40f60485532"
          ],
          "pending": [],
          "skipped": [],
          "duration": 516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}